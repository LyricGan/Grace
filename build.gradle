// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config/deps.gradle"

buildscript {
    ext {
        compileSdkVersion = 32
        buildToolsVersion = '32.0.0'
        minSdkVersion = 16
        targetSdkVersion = 32

        kotlin_version = '1.7.20'
        dokit_version = '3.7.1'
    }

    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        // DoKit
        classpath "io.github.didi.dokit:dokitx-plugin:$dokit_version"
    }
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        mavenCentral()
        maven { url 'https://jitpack.io' }
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    project.configurations.all {
        // 移除未使用三方库
        all*.exclude group: 'androidx.asynclayoutinflater'
        all*.exclude group: 'androidx.cursoradapter'
        all*.exclude group: 'androidx.documentfile'
        all*.exclude group: 'androidx.print'
        all*.exclude group: 'androidx.slidingpanelayout'
        all*.exclude group: 'androidx.versionedparcelable'
        all*.exclude group: 'androidx.webkit'

        // 遍历所有依赖库，通过判断requested.group和requested.name来指定使用的版本
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'androidx.annotation') {
                if (requested.module.name == 'annotation') {
                    details.useVersion '1.2.0'
                }
            } else if (requested.group == 'androidx.appcompat') {
                details.useVersion '1.3.1'
            } else if (requested.group == 'androidx.collection') {
                if (requested.module.name == 'collection') {
                    details.useVersion '1.1.0'
                }
            }  else if (requested.group == 'androidx.constraintlayout') {
                if (requested.module.name == 'constraintlayout') {
                    details.useVersion '2.0.4'
                }
            } else if (requested.group == 'androidx.customview') {
                details.useVersion '1.1.0'
            } else if (requested.group == 'androidx.databinding') {
                details.useVersion '7.0.4'
            } else if (requested.group == 'androidx.drawerlayout') {
                details.useVersion '1.1.1'
            } else if (requested.group == 'androidx.lifecycle') {
                if (requested.module.name == 'lifecycle-livedata') {
                    details.useVersion '2.4.0'
                }
            } else if (requested.group == 'org.jetbrains.kotlin') {
                if (requested.module.name == 'kotlin-android-extensions-runtime'
                        || requested.module.name == 'kotlin-stdlib-jdk7'
                        || requested.module.name == 'kotlin-stdlib-jdk8') {
                    details.useVersion rootProject.ext.kotlin_version
                }
            }
        }
    }
}
